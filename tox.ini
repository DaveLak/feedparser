[tox]
envlist =
    coverage_erase
    py{311, 310, 39, 38, 37, py3}{-chardet, }
    coverage_report
    docs
    mypy
labels =
    ci-test-linux = py{311, 310, 39, 38, 37, py3}-chardet
    ci-test-macos = py{311, 37}-chardet
    ci-test-windows = py{311, 37}-chardet
skip_missing_interpreters = True
isolated_build = True
min_version = 4.3.5


[testenv]
description = Run the test suite ({env_name})
depends =
    py{311, 310, 39, 38, 37, py3}{-chardet, }: coverage_erase
package = wheel
wheel_build_env = build_wheel
deps =
    coverage[toml]
    pytest
    responses
    chardet: chardet
commands =
    coverage run -m pytest


[testenv:coverage_erase]
description = Erase .coverage* files before testing
deps =
    coverage[toml]
commands =
    coverage erase


[testenv:coverage_report]
description = Report code coverage after testing
depends =
    py{311, 310, 39, 38, 37, py3}{-chardet, }
deps =
    coverage[toml]
commands_pre =
    coverage combine
    coverage html --fail-under=0
commands =
    coverage report


[testenv:docs]
description = Build and lint the documentation
skip_install = True
deps =
    -r requirements/docs.txt
commands =
    sphinx-build -EWq -j auto --keep-going docs/ build/docs/


[testenv:mypy]
description = Lint type annotations
deps =
    -r requirements/mypy.txt
commands =
    mypy


[testenv:update_requirements]
description = Update the requirements/*.txt files
base_python =
    python3.7
setenv =
    CUSTOM_COMPILE_COMMAND=tox run -e update_requirements
deps =
    -r requirements/pip-tools.txt
commands =
    pip-compile --allow-unsafe --resolver=backtracking --upgrade --quiet requirements/pip-tools.in
    pip-compile --allow-unsafe --resolver=backtracking --upgrade --quiet requirements/docs.in
    pip-compile --allow-unsafe --resolver=backtracking --upgrade --quiet requirements/mypy.in


[flake8]
max-line-length = 88
extend-ignore = E203
